{"version":3,"sources":["Components/GameCard.jsx","Components/GameCardList.jsx","App.js","index.js"],"names":["checkboxStyles","borderRadius","GameCard","handleUpdateState","event","props","updateGameState","target","value","div","drag","dragConstraints","left","right","whileHover","scale","className","Checkbox","checked","this","game","selected","icon","style","color","checkedIcon","id","onClick","title","React","Component","GameCardList","handleUpdateGameState","games","map","key","CustomTextField","withStyles","root","borderColor","TextField","largeButtonStyle","textTransform","float","fontFamily","playButtonStyle","width","fontSize","App","state","selection","currentName","handleTextFieldChange","setState","Array","from","newGame","length","push","forEach","selectedGames","i","Math","floor","random","h1","whileTap","Button","variant","startIcon","selectAllGames","onChange","label","margin","InputProps","addNewGame","size","marginRight","selectRandomGame","data","require","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f09b48ea.chunk.js","sourcesContent":["import React from 'react';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport CheckBoxOutlineBlankIcon from '@material-ui/icons/CheckBoxOutlineBlank';\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\nimport { motion } from \"framer-motion\"\r\nimport './Styles/GameCard.css';\r\n\r\nconst checkboxStyles = {\r\n  borderRadius: 0\r\n}\r\n\r\nclass GameCard extends React.Component {\r\n  handleUpdateState = event => {\r\n    this.props.updateGameState(event.target.value);\r\n  }\r\n\r\n  render() {\r\n    return(\r\n      <motion.div \r\n        drag=\"x\"\r\n        dragConstraints={{ left: -10, right: 10 }}\r\n        whileHover={{ scale: 0.9 }}\r\n        className=\"GameCard\"\r\n      >\r\n        <Checkbox\r\n          checked={ this.props.game.selected }\r\n          icon={ <CheckBoxOutlineBlankIcon style={{ color: '#eeeeee' }} /> }\r\n          checkedIcon={ <FavoriteIcon /> }\r\n          style={checkboxStyles}\r\n          value={ this.props.game.id }\r\n          onClick={ this.handleUpdateState }\r\n        />\r\n        <p>{ this.props.game.title }</p>\r\n      </motion.div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default GameCard;","import React from 'react';\r\nimport GameCard from './GameCard'; \r\nimport './Styles/GameCardList.css';\r\n\r\nclass GameCardList extends React.Component {\r\n  handleUpdateGameState = id => {\r\n    this.props.updateGameState(id);\r\n  }\r\n\r\n  render() {\r\n    return(\r\n      <div className=\"GameCardList\">\r\n        { this.props.games.map(game => (\r\n            <GameCard key={ game.id } game={ game } updateGameState={ this.handleUpdateGameState } />\r\n        ))}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default GameCardList;","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport SelectAllIcon from '@material-ui/icons/SelectAll';\nimport AddIcon from '@material-ui/icons/Add';\nimport TextField from '@material-ui/core/TextField';\nimport GameCardList from './Components/GameCardList';\nimport SportsEsportsIcon from '@material-ui/icons/SportsEsports';\nimport withStyles from '@material-ui/styles/withStyles';\nimport './App.css';\nimport { motion } from \"framer-motion\"\n\nconst CustomTextField = withStyles({\n  root: {\n    '& label': {\n      color: '#eeeeee'\n    },\n    '& label.Mui-focused': {\n      color: '#eeeeee',\n    },\n    '& .MuiOutlinedInput-root': {\n      '& fieldset': {\n        borderColor: '#eeeeee',\n      },\n      '&:hover fieldset': {\n        borderColor: '#757575',\n      },\n      '&.Mui-focused fieldset': {\n        borderColor: '#757575',\n      },\n    },\n  },\n})(TextField);\n\nconst largeButtonStyle = {\n  textTransform: 'capitalize', \n  float: 'right', \n  fontFamily: 'Oswald', \n  color: '#eeeeee'\n}\n\nconst playButtonStyle = {\n  textTransform: 'capitalize', \n  fontFamily: 'Oswald', \n  color: '#eeeeee',\n  width: '100%',\n  fontSize: '4vh'\n}\n\nclass App extends React.Component {\n  state = {\n    games: this.props.games,\n    selection: '',\n    currentName: ''\n  }\n\n  handleTextFieldChange = event => {\n    this.setState({\n      currentName: event.target.value\n    })\n  }\n\n  addNewGame() { \n    if (this.state.currentName !== '') {\n      const newGame = {\n        id: this.state.games.length,\n        title: this.state.currentName,\n        selected: false\n      }\n\n      var games = Array.from(this.state.games);\n      games.push(newGame);\n\n      this.setState({\n        games: games,\n        currentName: ''\n      });\n    }\n  }\n\n  updateGameState = id => {\n    var games = Array.from(this.state.games);\n    games[id].selected = !games[id].selected;\n\n    this.setState({\n      games: games\n    })\n  }\n\n  selectAllGames() {\n    var games = this.state.games;\n    games.forEach(game => { game.selected = true });\n\n    this.setState({\n      games: games\n    })\n  }\n\n  selectRandomGame() {\n    var selectedGames = [];\n\n    this.state.games.forEach(game => {\n      if (game.selected) {\n        selectedGames.push(game);\n      }\n    });\n    \n    const i = Math.floor(Math.random() * selectedGames.length);\n    const selection = selectedGames[i] || \"Select at least one game\";\n\n    this.setState ({\n      selection: selection.title\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <motion.h1 \n          drag=\"x\"\n          dragConstraints={{ left: -10, right: 10 }}\n          whileHover={{ scale: 1.1 }}\n          whileTap={{ scale: 0.9 }} \n        >\n          Random Game Pick\n        </motion.h1>\n        <div className=\"box\">\n          <h2>All Games</h2>\n          <Button\n            color=\"inherit\"\n            variant=\"outlined\"\n            startIcon={ <SelectAllIcon /> }\n            style={ largeButtonStyle }\n            onClick={ () => this.selectAllGames() }\n          >\n            Select All\n          </Button>\n        </div>\n        <GameCardList \n          games={ this.state.games } \n          updateGameState={ this.updateGameState }\n        />\n        <div className=\"form\">\n          <CustomTextField onChange={ this.handleTextFieldChange }\n            variant=\"outlined\"\n            label=\"Name\"\n            value={ this.state.currentName }\n            style={{ margin: '0px 30px 0px 0px' }}\n            InputProps={{\n              style: {\n                  color: \"#eeeeee\"\n              }\n            }}\n          />\n          <Button\n            color=\"inherit\"\n            variant=\"outlined\"\n            startIcon={ <AddIcon /> }\n            style={ largeButtonStyle }\n            onClick={ () => this.addNewGame() }\n            size=\"large\"\n          >\n            Add New Game\n          </Button>\n        </div>\n        <div className=\"results\">\n          <Button\n            color=\"inherit\"\n            variant=\"outlined\"\n            startIcon={ <SportsEsportsIcon style={{fontSize: '4vh', marginRight: '20px'}} /> }\n            style={ playButtonStyle }\n            onClick={ () => { this.selectRandomGame() } }\n          >\n            Let's go with ...\n          </Button>\n          <h3 className=\"selection\">{ this.state.selection }</h3>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nconst data = require('./Assets/games.json');\n\nReactDOM.render(\n  <React.StrictMode>\n    <App games={ data.games } />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}